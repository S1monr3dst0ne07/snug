
"this is my bf (interpreter) OwO
use 'lib/block.snug';



rout scan(
    in map;
    in prog;
){
    
    trans 128 ~ stack;
    put ptr = 0;

    enum cmd @ index ~ prog
    {
        jump open ~ cmd == `[;
        jump close ~ cmd == `];
        lab continue; 
    }
    jump done;


    lab open;
        "push index
        put stack.ptr = index;
        put ptr = ptr + 1;
        jump continue;

    lab close;
        "pull other index
        put ptr = ptr - 1;
        put other = stack.ptr;
        
        "link
        put map.index = other;
        put map.other = index;
        jump continue;

    lab done; 
}


rout run(
    in prog;
    in tape;
){
    sub Block::len(
        block ~ prog,
        len ~ prog_len,
    );

    "build loop map
    trans prog_len ~ map;
    sub Block::zero(block ~ map);
    sub scan(map, prog);

    put prog_head = (0 - 1);
    put cell_head = 0;

    lab loop;
        put prog_head = prog_head + 1;

        jump done ~ prog_head >= prog_len;
        put cmd = prog.prog_head;

        jump add   ~ cmd == `+;
        jump sub   ~ cmd == `-;
        jump left  ~ cmd == `<;
        jump right ~ cmd == `>;
        jump open  ~ cmd == `[;
        jump close ~ cmd == `];
        jump out   ~ cmd == `.;
        jump loop;

        lab add;   put tape.cell_head = 255 & (tape.cell_head + 1); jump loop;
        lab sub;   put tape.cell_head = 255 & (tape.cell_head - 1); jump loop;
        lab left;  put cell_head      = cell_head - 1;              jump loop;
        lab right; put cell_head      = cell_head + 1;              jump loop;

        lab open;
            jump loop ~ tape.cell_head != 0;
            put prog_head = map.prog_head;
            jump loop;

        lab close;
            jump loop ~ tape.cell_head == 0;
            put prog_head = map.prog_head;
            jump loop;

        lab out;
            write tape.cell_head;
            jump loop;


    lab done;
}




rout main
{
    put prog = '++++++++[>++++[>++>+++>+++>+<<<<-]>+>+>->>+[<]<-]>>.>---.+++++++..+++.>>.<-.<.+++.------.--------.>>+.>++.';
    debug 'program: {`prog}';

    trans 2048 ~ tape;
    sub Block::zero(block ~ tape);

    sub run(prog, tape);
}



